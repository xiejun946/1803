deployement 升级
kubectl set image deployment/nginx busybox=busybox nginx=nginx:1.9.1
查看升级状态
kubectl rollout status deployment/tomcat-deployment
回滚
kubectl rollout history deployment/tomcat-deployment 查看回滚历史
kubectl rollout undo deployment/tomcat-deployment  回滚到上一个版本
kubectl rollout undo deployment/tomcat-deployment --to-revision=5  回滚到指定版本

通过制定新的镜像来滚动更新pod从v1到v2
kubectl rolling-update frontend-v1 frontend-v2 --image=image:v2
通过指定yml文件或者json文件
kubectl rolling-update frontend-v1 -f frontend-v2.json 
升级副本扩容
kubectl scale --replicas=6 deployment/tomcat-deployment
删除
kubectl delete deployment/tomcat-deployment
滚动更新通过rs来控制
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service 
  labels:
    app: tomcat
spec:
  type: NodePort  
  ports:
  - port: 80  svc的端口
    targetPort: 8080  容器的端口
  selector:
    app: tomcat  标签关联后端的pod
    
    
 svc通过endpoint动态感知后端pod的ip，通过标签label关联pod

kubectl exec 无法进入容器时，权限出错，实际上是kubelet没有权限
error: unable to upgrade connection: Forbidden (user
kubectl apply -f apiserver-to-kubelet-rbac.yaml 给kubelet授权
升级完node节点内存之后，如果遇到kubelet无法启动，查看日志可以发现，无法找到docker守护进程，这时候需要重启docker即可
ingress 可以实现域名访问而不用ip加端口的方式，以及负载均衡

secret保存证书
kubectl create secret tls NAME --cert=path/to/cert/file --key=path/to/key/file [--dry-run] [options]

wordload或者控制器分五类
deployment，statefulset，daemonset，job，cronjob

db-0.my-service.default等价于ip，用语不同服务之间调用
当影响Kubelet性能因素是内存和硬盘，硬盘最大百分之80，当超过百分之80，就会杀掉低优先级pod
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    env: test
spec:
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: IfNotPresent
  priorityClassName: high-priority

创建一个pod的过程

1用户通过Kubectl提交一个创建RC的请求，该请求通过APIServer被写入etcd中，
2此时Controller Manager通过API Server的监听资源变化的接口监听到这个RC事件，分析之后，发现当前集群中还没有它所对应的Pod实例，
于是根据RC里的Pod模板定义生成一个Pod对象，通过APIServer写入etcd，此时 pod 处于 pending 状态
3此事件被Scheduler发现，它立即执行一个复杂的调度流程，为这个新Pod选定一个落户的Node，然后通过API Server讲这一结果写入到etcd中，
4目标Node上运行的Kubelet进程通过APIServer监测到这个“新生的”Pod，pending状态，并按照它的定义，启动该Pod。


